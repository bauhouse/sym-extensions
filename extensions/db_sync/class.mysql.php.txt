public function query($query){
	
    if(empty($query)) return false;
    
	$query = trim($query);
	
	$query_type = $this->determineQueryType($query);
	
	if($query_type == self::__READ_OPERATION__ && $this->isCachingEnabled() !== NULL && !preg_match('/^SELECT\s+SQL(_NO)?_CACHE/i', $query)){
		if($this->isCachingEnabled() === false) $query = preg_replace('/^SELECT\s+/i', 'SELECT SQL_NO_CACHE ', $query);
		elseif($this->isCachingEnabled() === true) $query = preg_replace('/^SELECT\s+/i', 'SELECT SQL_CACHE ', $query);
	}
	
    if($this->_connection['tbl_prefix'] != 'tbl_'){
        $query = preg_replace('/tbl_(\S+?)([\s\.,]|$)/', $this->_connection['tbl_prefix'].'\\1\\2', $query);
    }

	$query_hash = md5($query.time());
	
	$this->_log['query'][$query_hash] = array('query' => $query, 'start' => precision_timer());

    $this->flush();
    $this->_lastQuery = $query;

	$this->_result = @mysql_query($query, $this->_connection['id']);	

	$this->_query_count++;

    if(@mysql_error()){        
        $this->__error();
        return false;
    }

    while ($row = @mysql_fetch_object($this->_result)){	            
        @array_push($this->_lastResult, $row);
    }
		
    if($query_type == self::__WRITE_OPERATION__){
			
        $this->_affectedRows = @mysql_affected_rows();
			
        if(stristr($query, 'insert') || stristr($query, 'replace')){
            $this->_insertID = @mysql_insert_id($this->_connection['id']);
        }
				
    }
		
    @mysql_free_result($this->_result);
	
	// Start database logger
	if (
		// only structural changes, no SELECT
		preg_match('/^(insert|update|delete|create|drop)/i', $query) &&
		// discard unrequired tables
		!preg_match('/(sym_sessions|sym_cache|sym_authors)/i', $query) &&
		// discard content updates to tbl_entries and tbl_entries_data_$field
		!(preg_match('/^(insert|delete)/i', $query) && preg_match('/(sym_entries)/i', $query))
	) {
		mysql_query("INSERT INTO db_sync (`sql`) VALUES(\"" . $query . "\")", $this->_connection['id']);
	}
	// End database logger
		
	$this->_log['query'][$query_hash]['time'] = precision_timer('stop', $this->_log['query'][$query_hash]['start']);
	if($this->_logEverything) $this->_log['query'][$query_hash]['lastResult'] = $this->_lastResult;

    return true;
		
}
